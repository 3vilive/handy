// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package fn

func FilterInt(elements []int, fn func(int) bool) []int {
	var filtered []int
	for _, elem := range elements {
		if fn(elem) {
			filtered = append(filtered, elem)
		}
	}
	return filtered
}

func FilterInt64(elements []int64, fn func(int64) bool) []int64 {
	var filtered []int64
	for _, elem := range elements {
		if fn(elem) {
			filtered = append(filtered, elem)
		}
	}
	return filtered
}

func FilterByte(elements []byte, fn func(byte) bool) []byte {
	var filtered []byte
	for _, elem := range elements {
		if fn(elem) {
			filtered = append(filtered, elem)
		}
	}
	return filtered
}

func FilterString(elements []string, fn func(string) bool) []string {
	var filtered []string
	for _, elem := range elements {
		if fn(elem) {
			filtered = append(filtered, elem)
		}
	}
	return filtered
}

func FilterFloat32(elements []float32, fn func(float32) bool) []float32 {
	var filtered []float32
	for _, elem := range elements {
		if fn(elem) {
			filtered = append(filtered, elem)
		}
	}
	return filtered
}

func FilterFloat64(elements []float64, fn func(float64) bool) []float64 {
	var filtered []float64
	for _, elem := range elements {
		if fn(elem) {
			filtered = append(filtered, elem)
		}
	}
	return filtered
}
